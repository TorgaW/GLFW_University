#include "Engine/Engine.hpp"

int main(void)
{
    if(!Engine::Init())
        return 1;

    CameraManager::CreateCameraAndSetAsActive();
    CameraManager::active_camera->camera_position = {-20.0f, 5.0f, 10.0f};
    CameraManager::active_camera->camera_fov = 50.0f;
    auto sun = LightManager::CreatePhongDirectionalLight({-1.0f, 1.0f, 1.0f}, EngineColors::white, 1.0f);
    auto d_shader = ShaderManager::CreateDefaultPhongShader();

    std::vector<float> vbo_data = {
    0.0f, -1.0f, 0.0f, 0.1876f, -0.7947f, 0.5774f, 0.315176f, 0.545659f, 
    0.7236f, -0.447215f, 0.52572f, 0.1876f, -0.7947f, 0.5774f, 0.157751f, 0.45477f, 
    -0.276385f, -0.447215f, 0.85064f, 0.1876f, -0.7947f, 0.5774f, 0.315175f, 0.36388f, 
    0.7236f, -0.447215f, 0.52572f, 0.6071f, -0.7947f, -0.0f, 0.157751f, 0.45477f, 
    0.0f, -1.0f, 0.0f, 0.6071f, -0.7947f, -0.0f, 0.315176f, 0.545659f, 
    0.7236f, -0.447215f, -0.52572f, 0.6071f, -0.7947f, -0.0f, 0.157751f, 0.636547f, 
    0.0f, -1.0f, 0.0f, -0.4911f, -0.7947f, 0.3568f, 0.315176f, 0.545659f, 
    -0.276385f, -0.447215f, 0.85064f, -0.4911f, -0.7947f, 0.3568f, 0.315175f, 0.36388f, 
    -0.894425f, -0.447215f, 0.0f, -0.4911f, -0.7947f, 0.3568f, 0.472602f, 0.454767f, 
    0.0f, -1.0f, 0.0f, -0.4911f, -0.7947f, -0.3568f, 0.315176f, 0.545659f, 
    -0.894425f, -0.447215f, 0.0f, -0.4911f, -0.7947f, -0.3568f, 0.472602f, 0.454767f, 
    -0.276385f, -0.447215f, -0.85064f, -0.4911f, -0.7947f, -0.3568f, 0.472602f, 0.636547f, 
    0.0f, -1.0f, 0.0f, 0.1876f, -0.7947f, -0.5774f, 0.315176f, 0.545659f, 
    -0.276385f, -0.447215f, -0.85064f, 0.1876f, -0.7947f, -0.5774f, 0.315175f, 0.727438f, 
    0.7236f, -0.447215f, -0.52572f, 0.1876f, -0.7947f, -0.5774f, 0.157751f, 0.636547f, 
    0.7236f, -0.447215f, 0.52572f, 0.9822f, -0.1876f, -0.0f, 0.157535f, 0.545446f, 
    0.7236f, -0.447215f, -0.52572f, 0.9822f, -0.1876f, -0.0f, 0.157535f, 0.727223f, 
    0.894425f, 0.447215f, 0.0f, 0.9822f, -0.1876f, -0.0f, 0.000107f, 0.636334f, 
    -0.276385f, -0.447215f, 0.85064f, 0.3035f, -0.1876f, 0.9342f, 0.157535f, 0.363667f, 
    0.7236f, -0.447215f, 0.52572f, 0.3035f, -0.1876f, 0.9342f, 0.157535f, 0.545446f, 
    0.276385f, 0.447215f, 0.85064f, 0.3035f, -0.1876f, 0.9342f, 0.000108f, 0.454554f, 
    -0.894425f, -0.447215f, 0.0f, -0.7946f, -0.1876f, 0.5774f, 0.157536f, 0.181887f, 
    -0.276385f, -0.447215f, 0.85064f, -0.7946f, -0.1876f, 0.5774f, 0.157535f, 0.363667f, 
    -0.7236f, 0.447215f, 0.52572f, -0.7946f, -0.1876f, 0.5774f, 0.000108f, 0.272776f, 
    -0.276385f, -0.447215f, -0.85064f, -0.7946f, -0.1876f, -0.5774f, 0.157535f, 0.000107f, 
    -0.894425f, -0.447215f, 0.0f, -0.7946f, -0.1876f, -0.5774f, 0.157536f, 0.181887f, 
    -0.7236f, 0.447215f, -0.52572f, -0.7946f, -0.1876f, -0.5774f, 0.000108f, 0.090999f, 
    0.7236f, -0.447215f, -0.52572f, 0.3035f, -0.1876f, -0.9342f, 0.157535f, 0.727223f, 
    -0.276385f, -0.447215f, -0.85064f, 0.3035f, -0.1876f, -0.9342f, 0.157536f, 0.909001f, 
    0.276385f, 0.447215f, -0.85064f, 0.3035f, -0.1876f, -0.9342f, 0.000108f, 0.818114f, 
    0.7236f, -0.447215f, 0.52572f, 0.7946f, 0.1876f, 0.5774f, 0.157535f, 0.545446f, 
    0.894425f, 0.447215f, 0.0f, 0.7946f, 0.1876f, 0.5774f, 0.000107f, 0.636334f, 
    0.276385f, 0.447215f, 0.85064f, 0.7946f, 0.1876f, 0.5774f, 0.000108f, 0.454554f, 
    -0.276385f, -0.447215f, 0.85064f, -0.3035f, 0.1876f, 0.9342f, 0.157535f, 0.363667f, 
    0.276385f, 0.447215f, 0.85064f, -0.3035f, 0.1876f, 0.9342f, 0.000108f, 0.454554f, 
    -0.7236f, 0.447215f, 0.52572f, -0.3035f, 0.1876f, 0.9342f, 0.000108f, 0.272776f, 
    -0.894425f, -0.447215f, 0.0f, -0.9822f, 0.1876f, -0.0f, 0.157536f, 0.181887f, 
    -0.7236f, 0.447215f, 0.52572f, -0.9822f, 0.1876f, -0.0f, 0.000108f, 0.272776f, 
    -0.7236f, 0.447215f, -0.52572f, -0.9822f, 0.1876f, -0.0f, 0.000108f, 0.090999f, 
    -0.276385f, -0.447215f, -0.85064f, -0.3035f, 0.1876f, -0.9342f, 0.157536f, 0.909001f, 
    -0.7236f, 0.447215f, -0.52572f, -0.3035f, 0.1876f, -0.9342f, 0.000109f, 0.999893f, 
    0.276385f, 0.447215f, -0.85064f, -0.3035f, 0.1876f, -0.9342f, 0.000108f, 0.818114f, 
    0.7236f, -0.447215f, -0.52572f, 0.7946f, 0.1876f, -0.5774f, 0.157535f, 0.727223f, 
    0.276385f, 0.447215f, -0.85064f, 0.7946f, 0.1876f, -0.5774f, 0.000108f, 0.818114f, 
    0.894425f, 0.447215f, 0.0f, 0.7946f, 0.1876f, -0.5774f, 0.000107f, 0.636334f, 
    0.276385f, 0.447215f, 0.85064f, 0.4911f, 0.7947f, 0.3568f, 0.315175f, 0.000107f, 
    0.894425f, 0.447215f, 0.0f, 0.4911f, 0.7947f, 0.3568f, 0.472602f, 0.090995f, 
    0.0f, 1.0f, 0.0f, 0.4911f, 0.7947f, 0.3568f, 0.315176f, 0.181886f, 
    -0.7236f, 0.447215f, 0.52572f, -0.1876f, 0.7947f, 0.5774f, 0.157751f, 0.090998f, 
    0.276385f, 0.447215f, 0.85064f, -0.1876f, 0.7947f, 0.5774f, 0.315175f, 0.000107f, 
    0.0f, 1.0f, 0.0f, -0.1876f, 0.7947f, 0.5774f, 0.315176f, 0.181886f, 
    -0.7236f, 0.447215f, -0.52572f, -0.6071f, 0.7947f, -0.0f, 0.157751f, 0.272775f, 
    -0.7236f, 0.447215f, 0.52572f, -0.6071f, 0.7947f, -0.0f, 0.157751f, 0.090998f, 
    0.0f, 1.0f, 0.0f, -0.6071f, 0.7947f, -0.0f, 0.315176f, 0.181886f, 
    0.276385f, 0.447215f, -0.85064f, -0.1876f, 0.7947f, -0.5774f, 0.472602f, 0.272775f, 
    -0.7236f, 0.447215f, -0.52572f, -0.1876f, 0.7947f, -0.5774f, 0.315178f, 0.363665f, 
    0.0f, 1.0f, 0.0f, -0.1876f, 0.7947f, -0.5774f, 0.315176f, 0.181886f, 
    0.894425f, 0.447215f, 0.0f, 0.4911f, 0.7947f, -0.3568f, 0.472602f, 0.090995f, 
    0.276385f, 0.447215f, -0.85064f, 0.4911f, 0.7947f, -0.3568f, 0.472602f, 0.272775f, 
    0.0f, 1.0f, 0.0f, 0.4911f, 0.7947f, -0.3568f, 0.315176f, 0.181886f, 
    };

    auto mesh = MeshManager::CreateMesh("Resources/Models/sphere_t.obj", "Mesh #1");
    mesh->AttachShader(d_shader);
    mesh->material = new PBRMaterial();
    mesh->mesh_position = {0.0f, 0.0f, 0.0f};
    mesh->mesh_rotation = {0.0f, 0.0f, 0.0f};
    mesh->mesh_scale = {5.f, 5.f, 5.f};
    mesh->mesh_texture = new Texture("Resources/Textures/brick.jpg");
    mesh->material->Load();
    mesh->material->t_albedo_intensity = 1.5f;
    mesh->material->t_metallic_map_intensity = 1.0f;
    mesh->material->t_roughness_map_intensity = 0.4f;
    mesh->material->SetTextures(new Texture("Resources/Textures/PBR/damba_albedo.png"), new Texture("Resources/Textures/PBR/damba_normal.png"),
                                new Texture("Resources/Textures/PBR/damba_metallic.png"), new Texture("Resources/Textures/PBR/damba_roughness.png"),
                                new Texture("Resources/Textures/PBR/damba_ao.png"));

    // auto mesh2 = MeshManager::CreateMesh(vbo_data, vbo_data.size()/8, "Mesh #2");
    // mesh2->AttachShader(d_shader);
    // mesh2->mesh_position = {10.0f, 5.0f, 10.0f};
    // mesh2->mesh_rotation = {0.0f, 0.0f, 0.0f};
    // mesh2->mesh_scale = {5.f, 5.f, 5.f};
    // mesh2->mesh_texture = new Texture("Resources/Textures/brick.jpg");


    Engine::StartLoop();
    return 0;
}